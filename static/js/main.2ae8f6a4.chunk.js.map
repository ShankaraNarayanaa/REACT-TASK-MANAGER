{"version":3,"sources":["application/constants.js","auth/auth-user-context.js","auth/auth-hoc.js","application/services/firebase.js","application/services/auth.js","components/Navbar.js","pages/SignUpPage.js","auth/reducer.js","application/state-provider.js","application/services/board.js","pages/SignInPage.js","components/BoardTitle.js","components/BoardModal.js","components/BoardsPageSkeleton.js","pages/BoardsPage.js","components/BoardSkeleton.js","pages/BoardPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["ROUTES","AuthUserContext","React","createContext","withAuthorization","authCondition","Component","withRouter","props","useEffect","firebase","auth","onAuthStateChanged","authUser","history","push","useContext","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","provider","GoogleAuthProvider","firebaseAuth","createUserWithEmailAndPassword","email","password","signOut","getUser","currentUser","createUser","id","username","ref","set","authService","signInWithEmailAndPassword","Navbar","className","to","HomeOutlined","overlay","Item","onClick","trigger","SettingOutlined","SignUpForm","onSubmit","useState","setUsername","setEmail","newPassword","setNewPassword","loading","setLoading","error","setError","handleSubmit","message","onFinish","event","name","prefix","UserOutlined","style","color","placeholder","onChange","target","value","LockOutlined","type","htmlType","SignUpPage","useHistory","user","uid","actionTypes","reducer","state","action","StateContext","StateProvider","initialState","children","Provider","useReducer","userBoards","child","userBoard","board","boardService","key","once","data","update","SignInForm","setPassword","dispatch","signInWithGoogle","preventDefault","signInWithPopup","result","disabled","SignInPage","BoardTitle","title","handleBoardClick","addition","handleBoardStarToggling","starred","role","tabIndex","onKeyDown","e","stopPropagation","StarFilled","StarOutlined","BoardModal","closeModal","visible","boardTitle","setBoardTitle","isEmptyText","text","trim","handleCreateBoard","width","onCancel","footer","BoardsPageSkeleton","boardTitles","Array","count","fill","circle","height","map","nanoid","BoardsPage","boards","setBoards","modalVisible","setModalVisible","fetchBoards","on","snapshot","objectToArray","val","addBoard","starBoard","Object","values","index","keys","starredBoards","filter","BoardSkeleton","BoardPage","lanes","setBoard","fetchBoard","boardId","prepareBoard","lane","cards","match","params","handleDataChange","canAddLanes","editable","onDataChange","NotFoundPage","alt","src","Content","Consumer","exact","from","path","component","setAuthUser","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ae8f6a4.chunk.js","sourcesContent":["export const ROUTES = {\n    SIGN_UP: '/signup',\n    SIGN_IN: '/signin',\n    BOARDS: '/boards',\n    BOARD: '/boards/:board',\n};\n","import React from 'react';\n\nexport const AuthUserContext = React.createContext(null);\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { AuthUserContext } from './auth-user-context';\nimport { ROUTES } from '../application/constants';\n\nexport const withAuthentication = (Component) => (props) => {\n    const [authUser, setAuthUser] = useState(null);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((authUser = null) => {\n            setAuthUser(authUser);\n        });\n    }, []);\n\n    return (\n        <AuthUserContext.Provider value={authUser}>\n            <Component {...props} />\n        </AuthUserContext.Provider>\n    );\n};\n\nexport const withAuthorization = (authCondition) => (Component) =>\n    withRouter((props) => {\n        useEffect(() => {\n            firebase.auth().onAuthStateChanged((authUser) => {\n                if (!authCondition(authUser)) {\n                    props.history.push(ROUTES.SIGN_IN);\n                }\n            });\n        }, [props.history]);\n        const authUser = useContext(AuthUserContext);\n\n        return authUser ? <Component {...props} /> : null;\n    });\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\n\nconst config = {\n    apiKey: 'AIzaSyBbm75gKrf7TVrrEmgTxIHHT65_MvVrhwo',\n    authDomain: 'react-trello-clone-51b0e.firebaseapp.com',\n    projectId: 'react-trello-clone-51b0e',\n    storageBucket: 'react-trello-clone-51b0e.appspot.com',\n    messagingSenderId: '106309940838',\n    appId: '1:106309940838:web:5b2bc7eae512b34cd1dfa7',\n    measurementId: 'G-TL0XDG0THS',\n};\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(config);\n}\n\nexport const auth = firebase.auth();\nexport const db = firebase.database();\nexport const provider = new firebase.auth.GoogleAuthProvider();\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { db } from './firebase';\n\nconst firebaseAuth = () => firebase.auth();\n\nexport const createUserWithEmailAndPassword = (email, password) =>\n    firebaseAuth().createUserWithEmailAndPassword(email, password);\n\nexport const signInWithEmailAndPassword = (email, password) =>\n    firebaseAuth().signInWithEmailAndPassword(email, password);\n\nexport const signOut = () => firebaseAuth().signOut();\n\nexport const getUser = () => firebaseAuth().currentUser;\n\nexport const createUser = (id, username, email) =>\n    db.ref(`users/${id}`).set({\n        username,\n        email,\n    });\n\nexport const authService = {\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    signOut,\n    getUser,\n    createUser,\n};\n","import { Dropdown, Menu } from 'antd';\nimport { HomeOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Link, withRouter } from 'react-router-dom';\nimport React from 'react';\nimport { signOut } from '../application/services/auth';\nimport { ROUTES } from '../application/constants';\n\nexport const Navbar = withRouter(() => {\n    return (\n        <nav\n            className={`flex justify-between bg-blue-500 text-white px-3 py-2 absolute z-10 top-0 left-0 right-0`}\n        >\n            <Link to={ROUTES.BOARDS}>\n                <div\n                    className={`w-8 h-8 flex bg-blue-400 justify-center items-center rounded text-white`}\n                >\n                    <HomeOutlined />\n                </div>\n            </Link>\n            <Dropdown\n                overlay={\n                    <Menu>\n                        <Menu.Item key=\"0\" onClick={() => signOut()}>\n                            Sign Out\n                        </Menu.Item>\n                    </Menu>\n                }\n                trigger={['click']}\n            >\n                <div\n                    className={`w-8 h-8 flex bg-blue-400 justify-center items-center rounded text-white`}\n                >\n                    <SettingOutlined />\n                </div>\n            </Dropdown>\n        </nav>\n    );\n});\n","import { Button, Form, Input } from 'antd';\nimport React, { useState } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { createUser, createUserWithEmailAndPassword } from '../application/services/auth';\nimport { ROUTES } from '../application/constants';\n\nconst SignUpForm = ({ onSubmit }) => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const handleSubmit = async () => {\n        try {\n            setLoading(true);\n            await onSubmit(email, newPassword, username);\n            setLoading(false);\n        } catch (error) {\n            setError(error.message);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <h1 className={`text-xl mb-3 text-center`}>Sign Up</h1>\n            <Form onFinish={(event) => handleSubmit(event)} className=\"login-form\">\n                <Form.Item name=\"username\">\n                    <Input\n                        prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Username\"\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item name=\"email\">\n                    <Input\n                        prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Email\"\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                </Form.Item>\n                <Form.Item name=\"newPassword\">\n                    <Input\n                        prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={(event) => setNewPassword(event.target.value)}\n                    />\n                </Form.Item>\n\n                <Form.Item className={`my-3`}>\n                    <Button type=\"primary\" htmlType=\"submit\" className={`w-full`} loading={loading}>\n                        Sign Up\n                    </Button>\n                </Form.Item>\n\n                <div className={`text-red-500`}>{error}</div>\n            </Form>\n        </div>\n    );\n};\n\nexport const SignUpPage = withRouter(() => {\n    const history = useHistory();\n\n    const onSubmit = async (email, password, username) => {\n        const authUser = await createUserWithEmailAndPassword(email, password);\n        await createUser(authUser.user.uid, username, email);\n        history.push(ROUTES.BOARDS);\n    };\n\n    return (\n        <div className={`flex h-full`}>\n            <div className={`w-64 m-auto`}>\n                <SignUpForm onSubmit={onSubmit} />\n            </div>\n        </div>\n    );\n});\n","export const initialState = { user: null };\n\nexport const actionTypes = { SET_USER: 'SET_USER' };\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import { db } from './firebase';\nimport { getUser } from './auth';\n\nconst userBoards = () => db.ref('users').child(getUser().uid).child('boards');\n\nconst userBoard = (board) => userBoards().child(board);\n\nconst getBoard = (key) => userBoard(key).once('value');\n\nconst addBoard = (board) => userBoards().push(board);\n\nconst deleteBoard = (key) => userBoards().child(key).remove();\n\nconst updateBoard = (key, data) => userBoard(key).update(data);\n\nexport const boardService = {\n    userBoards,\n    getBoard,\n    addBoard,\n    deleteBoard,\n    updateBoard,\n};\n","import { Button, Form, Input } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { auth, provider } from '../application/services/firebase';\nimport { actionTypes } from '../auth/reducer';\nimport { useStateValue } from '../application/state-provider';\nimport { authService } from '../application/services';\nimport { ROUTES } from '../application/constants';\n\nconst SignInForm = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const signInWithGoogle = async (event) => {\n        event.preventDefault();\n        try {\n            setLoading(true);\n            const result = await auth.signInWithPopup(provider);\n            dispatch({\n                type: actionTypes.SET_USER,\n                user: result.user,\n            });\n            history.push(ROUTES.BOARDS);\n            setLoading(false);\n        } catch (error) {\n            setError(error.message);\n            setLoading(false);\n        }\n    };\n\n    const onFinish = async () => {\n        try {\n            setLoading(true);\n            await authService.signInWithEmailAndPassword(email, password);\n        } catch (error) {\n            setError(error.message);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <h1 className={`text-xl mb-3 text-center`}>Sign In</h1>\n\n            <Form onFinish={onFinish}>\n                <Form.Item name=\"email\">\n                    <Input\n                        prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Email\"\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                </Form.Item>\n\n                <Form.Item name=\"password\">\n                    <Input\n                        prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(event) => setPassword(event.target.value)}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n\n                    <div className={`text-red-500`}>{error}</div>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className={`w-full my-2`}\n                        disabled={loading}\n                    >\n                        Sign in\n                    </Button>\n                    <Button\n                        type=\"danger\"\n                        htmlType=\"submit\"\n                        className={`w-full mb-2`}\n                        onClick={signInWithGoogle}\n                        disabled={loading}\n                    >\n                        Continue with Google\n                    </Button>\n                    <p>\n                        Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n                    </p>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport const SignInPage = ({ history }) => (\n    <div className={`flex h-full`}>\n        <div className={`w-64 m-auto`}>\n            <SignInForm history={history} />\n        </div>\n    </div>\n);\n","import { StarFilled, StarOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\n\nexport const BoardTitle = ({\n    title,\n    handleBoardClick,\n    addition,\n    handleBoardStarToggling,\n    starred,\n}) => (\n    <div\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyDown={() => {}}\n        onClick={() => handleBoardClick()}\n        className={`h-32 rounded-md p-2 font-semibold flex ${\n            addition ? 'bg-gray-200 text-gray-900' : 'bg-blue-500 text-white justify-between'\n        }`}\n    >\n        <div className={addition ? 'm-auto' : ''}>{title}</div>\n        {!addition && (\n            <div\n                role=\"button\"\n                tabIndex=\"-1\"\n                className=\"flex\"\n                onClick={(e) => {\n                    e.stopPropagation();\n                    handleBoardStarToggling();\n                }}\n                onKeyDown={() => {}}\n            >\n                {starred ? (\n                    <StarFilled className=\"transform transition-all text-white text-opacity-75 hover:text-opacity-100 hover:translate-x-px scale-100 hover:scale-110 mt-auto\" />\n                ) : (\n                    <StarOutlined className=\"transform transition-all text-white text-opacity-75 hover:text-opacity-100 hover:translate-x-px scale-100 hover:scale-110 mt-auto\" />\n                )}\n            </div>\n        )}\n    </div>\n);\n\nBoardTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n    addition: PropTypes.bool,\n    handleBoardClick: PropTypes.func,\n    handleBoardStarToggling: PropTypes.func,\n    starred: PropTypes.bool,\n};\n","import { Button, Input, Modal } from 'antd';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const BoardModal = (props) => {\n    const { closeModal, action, visible } = props;\n    const [boardTitle, setBoardTitle] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const isEmptyText = (text) => !text || !text.trim();\n\n    const handleCreateBoard = async (event) => {\n        setLoading(true);\n        event.preventDefault();\n        if (isEmptyText(boardTitle)) {\n            return;\n        }\n        await action({\n            title: boardTitle,\n        });\n        setBoardTitle('');\n        setLoading(false);\n    };\n\n    return (\n        <Modal\n            title=\"Add board\"\n            width=\"400px\"\n            visible={visible}\n            onCancel={closeModal}\n            footer={null}\n        >\n            <form className={`w-full`} onSubmit={(event) => handleCreateBoard(event)}>\n                <Input\n                    className={`mb-3`}\n                    placeholder=\"Title\"\n                    onChange={(event) => setBoardTitle(event.target.value)}\n                    value={boardTitle}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={(event) => handleCreateBoard(event)}\n                    loading={loading}\n                    disabled={isEmptyText(boardTitle)}\n                >\n                    Add\n                </Button>\n            </form>\n        </Modal>\n    );\n};\n\nBoardModal.propTypes = {\n    closeModal: PropTypes.func.isRequired,\n    action: PropTypes.func.isRequired,\n    visible: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nexport const BoardsPageSkeleton = (props) => {\n    const boardTitles = Array(props.count).fill({});\n\n    return (\n        <div className={`pt-16 py-4 px-3`}>\n            <div className=\"flex mb-3 items-center text-xl\">\n                <Skeleton circle={true} height={30} width={30} />\n                <Skeleton width={200} className=\"ml-5\" />\n            </div>\n\n            <div className=\"grid grid-cols-4 gap-4\">\n                {boardTitles.map((id) => (\n                    <div className=\"rounded-md h-32\" key={nanoid()}>\n                        <Skeleton height=\"8rem\" />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nBoardsPageSkeleton.propTypes = {\n    count: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { UserOutlined, StarOutlined } from '@ant-design/icons';\nimport { boardService } from '../application/services';\nimport { withAuthorization } from '../auth/auth-hoc';\nimport { BoardTitle } from '../components/BoardTitle';\nimport { BoardModal } from '../components/BoardModal';\nimport { BoardsPageSkeleton } from '../components/BoardsPageSkeleton';\n\nexport const BoardsPage = withAuthorization((authUser) => !!authUser)(() => {\n    const [boards, setBoards] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [modalVisible, setModalVisible] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        setLoading(true);\n        (async () => {\n            await fetchBoards();\n        })();\n    }, []);\n\n    const fetchBoards = async () => {\n        await boardService.userBoards().on('value', (snapshot) => {\n            if (!snapshot) {\n                return;\n            }\n            setBoards(objectToArray(snapshot.val() || {}));\n            setLoading(false);\n        });\n    };\n\n    const addBoard = async (board) => {\n        await boardService.addBoard(board);\n        setModalVisible(false);\n    };\n\n    const starBoard = async (board, starred) => {\n        await boardService.updateBoard(board, { starred });\n    };\n\n    const objectToArray = (data) =>\n        !data\n            ? []\n            : Object.values(data).map((value, index) => ({\n                  ...value,\n                  key: Object.keys(data)[index],\n              }));\n\n    if (loading) {\n        return <BoardsPageSkeleton count={4} />;\n    }\n\n    const starredBoards = boards.filter((board) => board.starred);\n\n    return (\n        <div className={`pt-16 py-4 px-3`}>\n            {!!starredBoards.length && (\n                <>\n                    <div className=\"flex mb-3 items-center text-xl\">\n                        <StarOutlined className={`mr-2`} /> Starred Boards\n                    </div>\n\n                    <div className=\"grid grid-cols-4 gap-4 mb-6\">\n                        {starredBoards.map((board) => (\n                            <BoardTitle\n                                key={board?.key}\n                                title={board.title}\n                                handleBoardClick={() => history.push(`boards/${board?.key}`)}\n                                handleBoardStarToggling={() =>\n                                    starBoard(board?.key, !board.starred)\n                                }\n                                starred={board.starred}\n                            />\n                        ))}\n                    </div>\n                </>\n            )}\n\n            <div className=\"flex mb-3 items-center text-xl\">\n                <UserOutlined className={`mr-2`} /> Personal Boards\n            </div>\n\n            <div className=\"grid grid-cols-4 gap-4\">\n                {boards.map((board) => (\n                    <BoardTitle\n                        key={board?.key}\n                        title={board.title}\n                        handleBoardClick={() => history.push(`boards/${board?.key}`)}\n                        handleBoardStarToggling={() => starBoard(board?.key, !board.starred)}\n                        starred={board.starred}\n                    />\n                ))}\n                <BoardTitle\n                    title=\"Add new board\"\n                    addition={true}\n                    handleBoardClick={() => setModalVisible(true)}\n                />\n            </div>\n\n            <BoardModal\n                action={addBoard}\n                closeModal={() => setModalVisible(false)}\n                visible={modalVisible}\n            />\n        </div>\n    );\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from 'react-loading-skeleton';\nimport { nanoid } from 'nanoid';\n\nexport const BoardSkeleton = (props) => {\n    const boardTitles = Array(props.count).fill({});\n\n    return (\n        <div className={`pt-16 bg-blue-500 h-full`}>\n            <div className=\"grid grid-cols-5 gap-2.5  ml-2.5 mr-2.5\">\n                {boardTitles.map((id) => (\n                    <div className=\"bg-gray-200 rounded pl-4 pr-3 pt-3\" key={nanoid()}>\n                        <Skeleton height=\"1rem\" />\n                        <Skeleton height=\"4rem\" className=\"mt-4\" />\n                        <Skeleton height=\"4rem\" className=\"mt-2 mb-10\" />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nBoardSkeleton.propTypes = {\n    count: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Board from 'react-trello';\nimport { boardService } from '../application/services';\nimport { withAuthorization } from '../auth/auth-hoc';\nimport { BoardSkeleton } from '../components/BoardSkeleton';\n\nexport const BoardPage = withRouter(\n    withAuthorization((authUser) => !!authUser)((props) => {\n        const [board, setBoard] = useState({\n            lanes: [],\n        });\n        const [loading, setLoading] = useState(false);\n\n        useEffect(() => {\n            (async () => {\n                setLoading(true);\n                await fetchBoard();\n                setLoading(false);\n            })();\n        }, []);\n\n        const fetchBoard = async () => {\n            const data = (await boardService.getBoard(boardId())).val();\n            setBoard(prepareBoard(data));\n        };\n\n        // Fill empty properties that are important for Board component\n        const prepareBoard = (board) => ({\n            ...board,\n            lanes: (board?.lanes || []).map((lane) => ({\n                ...lane,\n                cards: lane?.cards || [],\n            })),\n        });\n\n        const boardId = () => props.match?.params?.board;\n\n        const handleDataChange = async (data) => await boardService.updateBoard(boardId(), data);\n\n        if (loading) {\n            return <BoardSkeleton count={5} />;\n        }\n\n        return (\n            <Board\n                className={`pt-16 bg-blue-500 h-full`}\n                canAddLanes={true}\n                editable={true}\n                data={{\n                    lanes: board.lanes || [],\n                }}\n                onDataChange={handleDataChange}\n            />\n        );\n    })\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n    <>\n        <img alt=\"404\" src=\"Images/404.svg\" className=\"m-auto my-10 h-4/5 w-3/5 block\" />\n        <p className=\"text-center mt-2 text-2xl\">The page isn't available. Sorry!</p>\n    </>\n);\n","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { ROUTES } from './application/constants';\nimport './index.css';\nimport { withAuthentication } from './auth/auth-hoc';\nimport { AuthUserContext } from './auth/auth-user-context';\nimport { Navbar } from './components/Navbar';\nimport { SignUpPage } from './pages/SignUpPage';\nimport { SignInPage } from './pages/SignInPage';\nimport { BoardsPage } from './pages/BoardsPage';\nimport { BoardPage } from './pages/BoardPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Content = withAuthentication(() => (\n    <Router>\n        <>\n            <AuthUserContext.Consumer>\n                {(authUser) => authUser && <Navbar />}\n            </AuthUserContext.Consumer>\n\n            <div className=\"h-full\">\n                <Switch>\n                    <Redirect exact from=\"/\" to=\"/boards\" />\n                    <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n                    <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n                    <Route exact path={ROUTES.BOARDS} component={BoardsPage} />\n                    <Route exact path={ROUTES.BOARD} component={BoardPage} />\n                    <Route component={NotFoundPage} />\n                </Switch>\n            </div>\n        </>\n    </Router>\n));\n\nconst App = () => <Content />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reducer, { initialState } from './auth/reducer';\nimport { StateProvider } from './application/state-provider';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <StateProvider initialState={initialState} reducer={reducer}>\n            <App className={`h-full`} />\n        </StateProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n    module.hot.accept();\n}\n"],"sourceRoot":""}